ALGORITHM ck_algo2
VAR
    tab1 : ARRAY_OF INTEGER[a];
    tab2 : ARRAY_OF INTEGER[b];
    tab :ARRAY_OF INTEGER[a+b]
    i,y,z,f:INTEGER
    check : BOOLEAN
    NBC,NBD : INTEGER:=0
BEGIN
    read(a)
    FOR i FROM 0 TO a-1 
    read(tab1[i])
    END_FOR
    read(b)
    FOR y FROM 0 TO b-1 
    read(tab2[y])
    END_FOR
    tab=concat(tab1,tab2)
    FOR z FROM 0 TO tab.length-1  DO
    check:=false
    FOR f FROM 0 TO tab.length-1  DO
    IF (tab[z]=tab[f] and z<>f) THEN
    NBC=NBC+tab[z]
    check:=true
    break;
    END_IF
    END_FOR
    IF (check=false) THEN
        NBD=NBD+tab[z]
    END_IF
    END_FOR
    write("nommbre commus",NBC)
    write("nommbre diff",NBD)
END





ALGORITHM algo2 hashtab
VAR
    set1 : ARRAY_OF INTEGER[n];
    set2: ARRAY_OF INTEGER[m];
    set: ARRAY_OF INTEGER[n+m];
    hashtab:HASH_TABLE<INTEGER,INTEGER>
    s_c,s_d:INTEGER:=0
    i,j:INTEGER

BEGIN
    read(n)
    FOR i FROM 0 TO n-1  DO
    read(set1[i])
    END_FOR
    read(m)
    FOR i FROM 0 TO m-1  DO
    read(set2[i])
    END_FOR
    set =concat(set1,set2)
    FOR i FROM 0 TO set.length-1 DO
    IF (hashtab.lookup(set[i])=false) THEN
        hashtab.insert(set[i],1)
    END_IF
    ELSE  hashtab.insert(set[i],hashtab.get(set[i])+1)
    END_FOR
    FOR item in hashtab DO
    IF (hashtab.get(item)=1) THEN
        s_d=s_d+item
    END_IF
    IF (hashtab.get(item)>1) THEN
        s_c=s_c+item*hashtab.get(item)
    END_IF
    END_FOR
    write("somme communs",s_c)
    write("somme differents",s_f)
END 